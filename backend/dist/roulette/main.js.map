{"version":3,"sources":["./src/app/panel/support/support.component.ts","./src/app/panel/support/support.component.html","./src/app/auth/activation/activation.component.ts","./src/app/auth/activation/activation.component.html","./src/app/game/bet-control/bet-control.component.ts","./src/app/game/bet-control/bet-control.component.html","./src/app/socket.service.ts","./src/app/panel/bet-history/bet-history.component.ts","./src/app/panel/bet-history/bet-history.component.html","./src/environments/environment.ts","./src/app/game/bet.service.ts","./src/app/auth/sign-in/sign-in.component.ts","./src/app/auth/sign-in/sign-in.component.html","./src/app/game/roulette/roulette.component.ts","./src/app/game/roulette/roulette.component.html","./src/app/game/timer/timer.component.ts","./src/app/game/timer/timer.component.html","./src/app/panel/change-password/change-password.component.ts","./src/app/panel/change-password/change-password.component.html","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/sign-up/sign-up.component.ts","./src/app/auth/sign-up/sign-up.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/sign-in/reset-password/reset-password.component.ts","./src/app/auth/sign-in/reset-password/reset-password.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/game/bet/bet.component.ts","./src/app/game/bet/bet.component.html","./src/app/panel/dashboard/dashboard.component.ts","./src/app/panel/dashboard/dashboard.component.html","./src/app/game/game.component.ts","./src/app/game/game.component.html","./src/app/panel/charge-account/charge-account.component.ts","./src/app/panel/charge-account/charge-account.component.html","./src/app/auth/auth.service.ts","./src/app/auth.guard.ts","./src/app/game/latest-roll/latest-roll.component.ts","./src/app/game/latest-roll/latest-roll.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-support',\n  templateUrl: './support.component.html',\n  styleUrls: ['./support.component.css']\n})\nexport class SupportComponent implements OnInit {\n  supportForm: FormGroup;\n  loading$: Subscription;\n  loading = false;\n\n  constructor(private auth: AuthService,\n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.loading$ = this.auth.loading$.subscribe((isLoading) => {\n      this.loading = isLoading;\n    });\n    \n    this.supportForm = new FormGroup({\n      'title' : new FormControl(null, [Validators.required]),\n      'description': new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n  }\n\n  onSubmit() {\n    const { title, description } = this.supportForm.value;\n    this.auth.support(title, description).subscribe((response) => {\n      this.toastr.success('we will contact you via email soon !', 'Ticket Sent !', {\n        positionClass: 'toast-bottom-right',\n      });\n      this.router.navigate(['panel']);\n    });\n  }\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Support Ticket</h1>\n    <h3>We are ready to respond at any time</h3>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"supportForm\">\n        <div class=\"supportticket-container\">\n            <div class=\"form-control\">\n                <label class=\"form-control-title\" for=\"title\">Title</label>\n                <input class=\"form-control-input\" formControlName=\"title\" placeholder=\"enter title\" type=\"text\" name=\"title\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"supportForm.get('title').invalid && supportForm.get('title').touched && supportForm.get('title').errors.required\">\n                title is required ! \n            </span>\n            <div class=\"form-control\">\n                <label class=\"form-control-title\" for=\"description\">Description</label>\n                <textarea class=\"form-control-textarea\" name=\"description\" id=\"description\" cols=\"30\" rows=\"10\" placeholder=\"description\" formControlName=\"description\"></textarea>\n            </div>\n            <span class=\"help-block\" *ngIf=\"supportForm.get('description').invalid && supportForm.get('description').touched && supportForm.get('description').errors.required\">\n                description is required !  \n            </span>\n            <span class=\"help-block\" *ngIf=\"supportForm.get('description').invalid && supportForm.get('description').touched && supportForm.get('description').errors.minlength\">\n                description should be at least 6 character ! \n            </span>\n            <button [disabled]=\"!supportForm.valid || loading\">Send Ticket</button>\n        </div>\n    </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-activation',\n  templateUrl: './activation.component.html',\n  styleUrls: ['./activation.component.css']\n})\nexport class ActivationComponent implements OnInit, OnDestroy {\n  isLoading = true;\n  activation$: Subscription;\n  loading$: Subscription;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private auth: AuthService,\n              private toastr: ToastrService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.paramMap.subscribe(params => {\n      const token = params.get('token');\n      this.activation$ = this.auth.activation(token).subscribe(() => {\n        this.toastr.success('your account activated , you can login now !', 'Sign up', {\n          positionClass: 'toast-bottom-right',\n        });\n      });\n      this.loading$ = this.auth.loading$.subscribe((isLoading) => {\n        this.isLoading = isLoading;\n      });\n    })\n  }\n\n  ngOnDestroy() {\n    this.activation$.unsubscribe();\n    this.loading$.unsubscribe();\n  }\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>{{ this.isLoading ? 'Please Wait...' : 'Completed' }}</h1>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { BetService } from '../bet.service';\n\n@Component({\n  selector: 'app-bet-control',\n  templateUrl: './bet-control.component.html',\n  styleUrls: ['./bet-control.component.css']\n})\nexport class BetControlComponent implements OnInit {\n  amount: number;\n\n  constructor(private betService: BetService) { }\n\n  ngOnInit(): void {\n  }\n\n  increaseBetAmount(amount: number) {\n    this.amount != null ? this.amount = this.amount + amount : this.amount = amount;\n    this.onBetAmountChange();\n  }\n\n  onBetAmountChange() {\n    this.betService.changeBetAmount(this.amount);\n  }\n\n  resetBetAmount() {\n    this.amount = 0;\n    this.onBetAmountChange();\n  }\n}\n","<div class=\"bet-control\">\n    <p>Enter Bet Amount : </p>\n    <input [(ngModel)]=\"amount\" type=\"number\" (input)=\"onBetAmountChange()\" placeholder=\"Enter Amount ...\">\n    <ul>\n        <li (click)=\"increaseBetAmount(1)\">+1</li>\n        <li (click)=\"increaseBetAmount(5)\">+5</li>\n        <li (click)=\"increaseBetAmount(10)\">+10</li>\n        <li (click)=\"increaseBetAmount(50)\">+50</li>\n        <li (click)=\"increaseBetAmount(100)\">+100</li>\n        <li (click)=\"resetBetAmount()\">CLEAR</li>\n    </ul>\n</div>","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\ninterface SocketIoConfig {\n  url?: string,\n  options?: object\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n  subscribersCounter: Record<string, number> = {};\n  eventObservables$: Record<string, Observable<any>> = {};\n  ioSocket: any;\n  config: SocketIoConfig = {\n      url: 'http://192.168.1.83:4000',\n      options: {}\n  };\n\n  constructor() {\n      const url = this.config.url;\n      const options = this.config.options;\n      const ioFunc = (io as any).default ? (io as any).default : io;\n      this.ioSocket = ioFunc(url, options);\n  }\n\n  of(namespace: string) {\n      this.ioSocket.of(namespace);\n  }\n\n  on(eventName: string, callback: Function) {\n      this.ioSocket.on(eventName, callback);\n  }\n\n  once(eventName: string, callback: Function) {\n      this.ioSocket.once(eventName, callback);\n  }\n\n  connect() {\n      return this.ioSocket.connect();\n  }\n\n  disconnect(close?: any) {\n      return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n  }\n\n  emit(eventName: string, ...args: any[]) {\n      return this.ioSocket.emit.apply(this.ioSocket, arguments);\n  }\n\n  removeListener(eventName: string, callback?: Function) {\n      return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n  }\n\n  removeAllListeners(eventName?: string) {\n      return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n  }\n\n  fromEvent<T>(eventName: string): Observable<T> {\n      if (!this.subscribersCounter[eventName]) {\n          this.subscribersCounter[eventName] = 0;\n      }\n      this.subscribersCounter[eventName]++;\n\n      if (!this.eventObservables$[eventName]) {\n          this.eventObservables$[eventName] = new Observable((observer: any) => {\n              const listener = (data: T) => {\n                  observer.next(data);\n              };\n               this.ioSocket.on(eventName, listener);\n               return () => {\n                   this.subscribersCounter[eventName]--;\n                   if (this.subscribersCounter[eventName] === 0) {\n                      this.ioSocket.removeListener(eventName, listener);\n                      delete this.eventObservables$[eventName];\n                   }\n              };\n          }).pipe(\n              share()\n          );\n      }\n      return this.eventObservables$[eventName];\n  }\n\n  fromOneTimeEvent<T>(eventName: string): Promise<T> {\n      return new Promise<T>(resolve => this.once(eventName, resolve));\n  }\n\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Columns, Config, DefaultConfig } from 'ngx-easy-table';\nimport { interval, Subscription } from 'rxjs';\nimport { BetService } from 'src/app/game/bet.service';\nimport { UserBet } from 'src/app/game/models/bet';\n\n@Component({\n  selector: 'app-bet-history',\n  templateUrl: './bet-history.component.html',\n  styleUrls: ['./bet-history.component.css'],\n})\nexport class BetHistoryComponent implements OnInit, OnDestroy {\n  public configuration: Config;\n  public columns: Columns[];\n  public data = [];\n  allBets$: Subscription;\n  isLoading = true;\n\n  constructor(private bet: BetService) { }\n\n  ngOnInit(): void {\n    this.configuration = { ...DefaultConfig };\n    this.configuration.paginationEnabled = false;\n\n    this.columns = [\n      { key: 'id', title: '#' },\n      { key: 'color', title: 'Color' },\n      { key: 'amount', title: 'Amount' },\n      { key: 'status', title: 'Status' },\n      { key: 'createdAt', title: 'Date' }\n    ];\n\n    this.allBets$ = this.bet.getAllBets().subscribe((userBets: UserBet[]) => {\n      this.isLoading = false;\n      const updatedBets = userBets.map((userBet) => {\n        const updatedBet = {\n          id: userBet.id,\n          color: userBet.color,\n          amount: userBet.amount,\n          status: userBet.status,\n          round: userBet.round,\n          createdAt: new Date(userBet.createdAt).toLocaleString(),\n          updatedAt: userBet.updatedAt,\n        };\n        return updatedBet;\n      }).sort((a: UserBet, b: UserBet) => {\n        return a.id > b.id ? 1 : a.id < b.id ? -1 : 0; \n      });\n      this.data = updatedBets;\n    });\n  }\n\n  ngOnDestroy() {\n    this.allBets$.unsubscribe();\n  }\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Bet's History</h1>\n    <h3>Last 10 bets</h3>\n    <form>\n        <div class=\"bethistory-container\">\n            <div class=\"lds-roller\" *ngIf=\"isLoading\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n            <ngx-table *ngIf=\"data.length > 0 || !isLoading\"\n                       [configuration]=\"configuration\"\n                       [data]=\"data\"\n                       [columns]=\"columns\"\n                       [loadingTemplate]=\"loadingTemplate\">\n            </ngx-table>\n        </div>\n    </form>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://192.168.1.83:2017/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, of, Subject } from 'rxjs';\nimport { catchError, take, tap } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../auth/models/auth';\nimport { SocketService } from '../socket.service';\nimport { Bet, UserBet } from './models/bet';\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BetService {\n  retriveAllBets$ = new BehaviorSubject<Bet[]>([]);\n  newBetAdded$ = new Subject<Bet>();\n  betAmount = 0;\n\n  constructor(private toastr: ToastrService,\n              private socketService: SocketService,\n              private auth: AuthService,\n              private http: HttpClient) { }\n\n  changeBetAmount($amount: number) {\n    this.betAmount = $amount;\n  }\n\n  newBet(color: string) {\n    if (this.auth.isLoggedIn) {\n      if (this.betAmount > 0) {\n        this.auth.loggedInUserData$.pipe(take(1)).subscribe((userData: User) => {\n          this.toastr.info('new Bet Request Sent !', 'new Bet !' , {\n            positionClass: 'toast-bottom-right'\n          });\n          this.socketService.emit('newBet', {\n            token: userData.token,\n            color: color,\n            amount: this.betAmount\n          });\n          this.socketService.emit('updateFundRequest', {\n            token: userData.token\n          });\n        });\n      } else {\n        this.toastr.warning('Please enter bet amount before submitting bet !', 'Enter Amount !' , {\n          positionClass: 'toast-bottom-right'\n        });\n      }\n    } else {\n      this.toastr.error('Please sing in or sign up before placing bet !', 'Sign in' , {\n        positionClass: 'toast-bottom-right'\n      });\n    }\n  }\n\n  getAllBets() {\n    return this.http.post<UserBet[]>(environment.apiUrl + 'private/user-all-bets', {\n      token: this.auth.token\n    }).pipe(catchError(error => {\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }));\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { RegisterResponse } from '../models/auth';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit, OnDestroy {\n  signInForm: FormGroup;\n  loading$: Subscription;\n  loading = false;\n\n  constructor(private auth: AuthService,\n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.loading$ = this.auth.loading$.subscribe((isLoading) => {\n      this.loading = isLoading;\n    });\n\n    this.signInForm = new FormGroup({\n      'username': new FormControl('', [Validators.required, Validators.minLength(6), Validators.pattern(/^[A-Za-z0-9]+/)]),\n      'password': new FormControl('', [ Validators.required, Validators.minLength(6) ])\n    });\n  }\n\n  onSubmit() {\n    const { username, password } = this.signInForm.value;\n    this.auth.login(username, password).subscribe((userData: RegisterResponse) => {\n      this.toastr.success(`Welcome dear ${ userData.user.username } !`, 'Sign in', {\n        positionClass: 'toast-bottom-right',\n      });\n      this.router.navigate(['/game']);\n    });\n  }\n\n  ngOnDestroy() {\n    this.loading$.unsubscribe();\n  }\n\n}\n","<div class=\"sign-in-container\">\n    <div class=\"sign-in\">\n        <h1>Sign in</h1>\n        <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-control\">\n                <label for=\"username\" class=\"form-control-title\">Username: </label>\n                <input class=\"form-control-input\" name=\"username\" formControlName=\"username\" placeholder=\"Enter username\" type=\"text\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"signInForm.get('username').invalid && signInForm.get('username').touched && signInForm.get('username').errors.required\">\n                username field is required ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"signInForm.get('username').invalid && signInForm.get('username').touched && signInForm.get('username').errors.minlength\">\n                username field must be 6 character at least ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"signInForm.get('username').invalid && signInForm.get('username').touched && signInForm.get('username').errors.pattern\">\n                wrong username format   \n            </span>\n            <div class=\"form-control\">\n                <label for=\"password\" class=\"form-control-title\">Password: </label>\n                <input class=\"form-control-input\" name=\"password\" formControlName=\"password\" placeholder=\"Enter password\" type=\"password\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"signInForm.get('password').invalid && signInForm.get('password').touched && signInForm.get('password').errors.required\">\n                password field is required ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"signInForm.get('password').invalid && signInForm.get('password').touched && signInForm.get('password').errors.minlength\">\n                password length must be at least 6 character ! \n            </span>\n            <button type=\"submit\" [disabled]=\"!signInForm.valid || loading\">{{ loading ? 'Please wait ...' : 'Sign In !' }}</button>\n        </form>\n    </div>\n    <app-reset-password></app-reset-password>\n</div>","import { animate, AnimationBuilder, AnimationPlayer, style } from '@angular/animations';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SocketService } from 'src/app/socket.service';\n\n@Component({\n  selector: 'app-roulette',\n  templateUrl: './roulette.component.html',\n  styleUrls: ['./roulette.component.css']\n})\nexport class RouletteComponent implements OnInit {\n  @ViewChild('roulette', { static: true })\n  roullete : ElementRef;\n\n  animationRoulette: AnimationPlayer;\n  initialRoulettePosition: number;\n  currentPosition: number;\n  rollObservable$: Subscription;\n  rollingObservable$: Subscription;\n  restartRollObservable$: Subscription;\n  timerDiff$: Subscription;\n  audio: HTMLAudioElement;\n  rollStatus: string;\n  timerDiff = 0;\n  \n  constructor(private animBuild: AnimationBuilder,\n              private socketService: SocketService,\n              private window: Window) {}\n\n  ngOnInit(): void {\n    this.audio = new Audio();\n    this.audio.src = '../../../../assets/roll.mp3';\n    this.audio.load();\n\n\n    this.initialRoulettePosition = parseInt(getComputedStyle(this.roullete.nativeElement).backgroundPositionX.replace('px', ''));\n\n    this.rollObservable$ = this.socketService.fromEvent('roll').subscribe((rolledNumber: number) => {\n      this.audio.play();\n      this.rouletteRoll(rolledNumber, -12000, 9000);\n      this.rollStatus = 'rolling';\n    });\n\n    this.timerDiff$ = this.socketService.fromEvent('timerDiff').subscribe((timeDiff: number) => {\n      this.timerDiff = 9000 + (timeDiff * 1000) > 0 ? 9000 + (timeDiff * 1000) : 0;\n    });\n\n    this.rollingObservable$ = this.socketService.fromEvent('rolling').subscribe((rolledNumber: number) => {\n      this.audio.play();\n      this.rouletteRoll(rolledNumber, -12000, this.timerDiff);\n      this.rollStatus = 'rolling';\n    });\n\n    this.restartRollObservable$ = this.socketService.fromEvent('restart').subscribe(() => {\n      this.updateRoulette(this.initialRoulettePosition, 2000);\n      this.rollStatus = 'normal';\n    });\n  }\n\n  updateRoulette(position: number, timer: number): void {\n    const rouletteAnimation = this.animBuild.build([\n      animate(`${timer}ms cubic-bezier(0.2, 0.1, 0.1, 1)`, style({\n        backgroundPositionX: `${position}px`\n      }))\n    ]);\n    this.animationRoulette = rouletteAnimation.create(this.roullete.nativeElement);\n    this.animationRoulette.play();\n  }\n\n  rouletteRoll(rolledNumber: number, position: number, animTimer: number): void {\n    const layout = [1, 14, 2, 13, 3, 12, 4, 0, 11, 5, 10, 6, 9, 7, 8];\n    const rollIndex = layout.findIndex((number) => number === rolledNumber);\n    if (rollIndex > 7) {\n      this.currentPosition = position + this.initialRoulettePosition + ( rollIndex - 7 ) * -100 - this.randomNumber(-49, 49);\n    } else {\n      this.currentPosition = position + this.initialRoulettePosition + ( 7 + (rollIndex + 1) ) * -100 - this.randomNumber(-49, 49);\n    }\n    this.updateRoulette(this.currentPosition, animTimer)\n  }\n\n  randomNumber(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  onResize($event: Event) {\n    this.resizeHandler();\n  }\n\n  onOrientaionChange($event) {\n    this.resizeHandler();\n  }\n\n  resizeHandler() {\n    if (this.window.matchMedia('(min-width: 1200px)').matches) {\n      if (this.rollStatus == 'normal') {\n        this.updateRoulette(-175, 300);\n      }\n      this.initialRoulettePosition = -175;\n    } else if (this.window.matchMedia('(max-width: 1200px)').matches\n              && this.window.matchMedia('(min-width: 820px)').matches) {\n      if (this.rollStatus == 'normal') {\n        this.updateRoulette(-350, 300);\n      }\n      this.initialRoulettePosition = -350;\n    } else if (this.window.matchMedia('(max-width: 820px)').matches\n              && this.window.matchMedia('(min-width: 620px)').matches) {\n      if (this.rollStatus == 'normal') {\n        this.updateRoulette(-450, 300);\n      }\n      this.initialRoulettePosition = -450;\n    } else if (this.window.matchMedia('(max-width: 620px)').matches\n              && this.window.matchMedia('(min-width: 420px)').matches) {\n      if (this.rollStatus == 'normal') {\n        this.updateRoulette(-550, 300);  \n      }\n      this.initialRoulettePosition = -550;\n    } else {\n      if (this.rollStatus == 'normal') {\n        this.updateRoulette(-625, 300);  \n      }\n      this.initialRoulettePosition = -625;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.rollingObservable$.unsubscribe();\n    this.rollObservable$.unsubscribe();\n    this.restartRollObservable$.unsubscribe();\n    this.timerDiff$.unsubscribe();\n  }\n\n}\n","<div class=\"roulette\" #roulette (window:resize)=\"onResize($event)\" (window:orientationchange)=\"onOrientaionChange($event)\"></div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { SocketService } from 'src/app/socket.service';\n\n@Component({\n  selector: 'app-timer',\n  templateUrl: './timer.component.html',\n  styleUrls: ['./timer.component.css'],\n})\nexport class TimerComponent implements OnInit, OnDestroy {\n  timer = 'Connecting...';\n  testWidth = 100;\n  rollTimer$: Subscription;\n  restartRoll$: Subscription;\n  winner$: Subscription;\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit(): void {\n    this.rollTimer$ = this.socketService.fromEvent('timer').subscribe((timer: number) => {\n      if (timer === 0) {\n        this.testWidth = 100;\n        this.timer = 'Rolling ...'\n      } else {\n        this.testWidth = 100 - (timer * 6.6);\n        this.timer = timer.toString() + ' Sec';\n      }\n    });\n\n    this.winner$ = this.socketService.fromEvent('winner').subscribe((winnerColor: string) => {\n      if (winnerColor == 'red') {\n        this.timer = 'WINNER : RED';\n      } else if (winnerColor == 'green') {\n        this.timer = 'WINNER : GREEN';\n      } else {\n        this.timer = 'WINNER : BLACK';\n      }\n    });\n\n    this.restartRoll$ = this.socketService.fromEvent('restart').subscribe(() => {\n      this.timer = 'Restarting Game...';\n    });\n  }\n\n  ngOnDestroy() {\n    this.rollTimer$.unsubscribe();\n    this.restartRoll$.unsubscribe();\n    this.winner$.unsubscribe();\n  }\n}\n","<div class=\"timer\">\n    <div class=\"timer-elapsed\" [ngStyle]=\"{'width': testWidth+ '%'}\"></div>\n    <p>{{ timer }}</p>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  changePassForm: FormGroup;\n  changePassword$: Subscription;\n  isLoading$: Subscription;\n  loading = false;\n\n  constructor(private auth: AuthService,\n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.changePassForm = new FormGroup({\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)]),\n      'cpassword': new FormControl(null, [Validators.required, Validators.minLength(6), ChangePasswordComponent.matchValues('password')])\n    });\n\n    this.isLoading$ = this.auth.loading$.subscribe((isLoading) => {\n      this.loading = isLoading;\n    })\n  }\n\n  onSubmit() {\n    const { password, cpassword } = this.changePassForm.value;\n    this.changePassword$ = this.auth.changePassword(password, cpassword).subscribe(() => {\n      this.toastr.success('your password updated successsfully !', 'Password Update', {\n        positionClass: 'toast-bottom-right',\n      });\n      this.router.navigate(['/panel']);\n    });\n  }\n\n  public static matchValues(\n    matchTo: string \n  ): (AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl): ValidationErrors | null => {\n      return !!control.parent &&\n        !!control.parent.value &&\n        control.value === control.parent.controls[matchTo].value\n        ? null\n        : { isMatching: false };\n    };\n  }\n\n  ngOnDestroy() {\n    this.isLoading$.unsubscribe();\n    if (this.changePassword$) {\n      this.changePassword$.unsubscribe()\n    }\n  }\n\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Change Password</h1>\n    <h3>Please enter your new password</h3>\n    <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"changePassForm\">\n        <div class=\"changepassword-container\">\n            <div class=\"form-control\">\n                <label class=\"form-control-title\" for=\"password\">New Password</label>\n                <input class=\"form-control-input\" formControlName=\"password\" placeholder=\"enter new password\" type=\"password\" name=\"password\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"changePassForm.get('password').invalid && changePassForm.get('password').touched && changePassForm.get('password').errors.required\">\n                password field is required ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"changePassForm.get('password').invalid && changePassForm.get('password').touched && changePassForm.get('password').errors.minlength\">\n                password length must be at least 6 character ! \n            </span>\n            <div class=\"form-control\">\n                <label class=\"form-control-title\" for=\"cpassword\">Confirm New Password</label>\n                <input class=\"form-control-input\" formControlName=\"cpassword\" placeholder=\"Re-enter new password\" type=\"password\" name=\"cpassword\">\n            </div>\n            <span class=\"help-block\" *ngIf=\"changePassForm.get('cpassword').invalid && changePassForm.get('cpassword').touched && changePassForm.get('cpassword').errors.required\">\n                confirm password field is required ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"changePassForm.get('cpassword').invalid && changePassForm.get('cpassword').touched && !changePassForm.get('cpassword').errors.isMatching\">\n                password not match ! \n            </span>\n            <button [disabled]=\"!changePassForm.valid || loading\">Change Password</button>\n        </div>\n    </form>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { interval, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css'],\n  animations: [\n    trigger('startGameState', [\n      state('start', style({\n        transform: 'rotate(0deg) scale(1)',\n      })),\n      state('end', style({\n        transform: 'rotate(8deg) scale(1.5)',\n      })),\n      transition('start => end', [\n        animate('1000ms ease-in-out')\n      ]),\n      transition('end => start' , [\n        animate('1000ms ease-in-out')\n      ])\n    ])\n  ]\n})\nexport class LandingComponent implements OnInit, OnDestroy {\n  buttonState: string;\n  gameButtonInterval$: Subscription;\n  audio: HTMLAudioElement;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n    this.buttonState = 'start';\n    this.gameButtonInterval$ = interval(1100).subscribe(() => {\n      this.buttonState == 'start' ? this.buttonState = 'end' : this.buttonState = 'start';\n    });\n  }\n\n  playSound(): void {\n    this.audio = new Audio();\n    this.audio.src = '../../../assets/sound.ogg';\n    this.audio.load();\n    this.audio.play();\n    this.router.navigate(['/game']);\n  }\n\n  ngOnDestroy(): void {\n    this.gameButtonInterval$.unsubscribe();\n  }\n\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Welcome To Beroul  </h1>\n    <button [@startGameState]=\"buttonState\" (click)=\"playSound()\">Start The Game</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bg-image\"></div>\r\n<div class=\"container\">\r\n    <div class=\"auth-container\">\r\n        <app-sign-up></app-sign-up>\r\n        <div class=\"indicator\"></div>\r\n        <app-sign-in></app-sign-in>\r\n    </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\nimport { RegisterResponse } from '../models/auth';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n  signUpForm: FormGroup;\n  loading$: Subscription;\n  loading = false;\n\n  constructor(private authService: AuthService,\n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.loading$ = this.authService.loading$.subscribe(isLoading => {\n      this.loading = isLoading;\n    });\n\n    this.signUpForm = new FormGroup({\n      'username': new FormControl(null, [Validators.required, Validators.minLength(6), Validators.pattern(/^[A-Za-z0-9]+/)]),\n      'email': new FormControl(null, [Validators.required, Validators.email]),\n      'password': new FormControl(null, [Validators.required, Validators.minLength(6)]),\n      'cpassword': new FormControl(null, [Validators.required, Validators.minLength(6), SignUpComponent.matchValues('password')])\n    });\n  }\n\n  public static matchValues(\n    matchTo: string \n  ): (AbstractControl) => ValidationErrors | null {\n    return (control: AbstractControl): ValidationErrors | null => {\n      return !!control.parent &&\n        !!control.parent.value &&\n        control.value === control.parent.controls[matchTo].value\n        ? null\n        : { isMatching: false };\n    };\n  }\n\n  onSubmit() {\n    const { username, email, password, cpassword } = this.signUpForm.value;\n    this\n      .authService\n      .register(username, email, password, cpassword)\n      .subscribe(() => {\n        this.toastr.success('your account created successfully , please check your email for activating account !', 'Sign up', {\n          positionClass: 'toast-bottom-right',\n        });\n      });\n  }\n\n  ngOnDestroy() {\n    this.loading$.unsubscribe();\n  }\n\n}\n","<div class=\"sign-up\">\n    <h1>Sign up</h1>\n    <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"form-control\">\n            <label for=\"username\" class=\"form-control-title\">Username: </label>\n            <input class=\"form-control-input\" name=\"username\" formControlName=\"username\" placeholder=\"Enter username\" type=\"text\">\n        </div>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('username').invalid && signUpForm.get('username').touched && signUpForm.get('username').errors.required\">\n            username field is required ! \n        </span>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('username').invalid && signUpForm.get('username').touched && signUpForm.get('username').errors.minlength\">\n            username field must be 6 character at least ! \n        </span>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('username').invalid && signUpForm.get('username').touched && signUpForm.get('username').errors.pattern\">\n            wrong username format   \n        </span>\n        <div class=\"form-control\">\n            <label for=\"email\" class=\"form-control-title\">Email: </label>\n            <input class=\"form-control-input\" name=\"email\" formControlName=\"email\" placeholder=\"Enter email\" type=\"text\">\n        </div>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('email').invalid && signUpForm.get('email').touched && signUpForm.get('email').errors.required\">\n            email field is required ! \n        </span>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('email').invalid && signUpForm.get('email').touched && signUpForm.get('email').errors.email\">\n            please enter valid email address ! \n        </span>\n        <div class=\"form-control\">\n            <label for=\"password\" class=\"form-control-title\">Password: </label>\n            <input class=\"form-control-input\" name=\"password\" formControlName=\"password\" placeholder=\"Enter password\" type=\"password\">\n        </div>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('password').invalid && signUpForm.get('password').touched && signUpForm.get('password').errors.required\">\n            password field is required ! \n        </span>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('password').invalid && signUpForm.get('password').touched && signUpForm.get('password').errors.minlength\">\n            password length must be at least 6 character ! \n        </span>\n        <div class=\"form-control\">\n            <label for=\"cpassword\" class=\"form-control-title\">Confirm Password: </label>\n            <input class=\"form-control-input\" name=\"cpassword\" formControlName=\"cpassword\" placeholder=\"Enter password\" type=\"password\">\n        </div>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('cpassword').invalid && signUpForm.get('cpassword').touched && signUpForm.get('cpassword').errors.required\">\n            confirm password field is required ! \n        </span>\n        <span class=\"help-block\" *ngIf=\"signUpForm.get('cpassword').invalid && signUpForm.get('cpassword').touched && !signUpForm.get('cpassword').errors.isMatching\">\n            password not match ! \n        </span>\n        <button type=\"submit\" [disabled]=\"!signUpForm.valid || loading\">{{ loading ? 'Please wait ...' : 'Sign Up Now !' }}</button>\n    </form>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'roulette';\n}\n","<app-header></app-header>\n<main>\n    <router-outlet></router-outlet>\n</main>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\nimport { ToastrModule } from 'ngx-toastr';\nimport { Ng9OdometerModule } from 'ng9-odometer';\nimport { TableModule } from 'ngx-easy-table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { GameComponent } from './game/game.component';\nimport { RouletteComponent } from './game/roulette/roulette.component';\nimport { TimerComponent } from './game/timer/timer.component';\nimport { BetComponent } from './game/bet/bet.component';\nimport { LatestRollComponent } from './game/latest-roll/latest-roll.component';\nimport { BetControlComponent } from './game/bet-control/bet-control.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { SignUpComponent } from './auth/sign-up/sign-up.component';\nimport { SignInComponent } from './auth/sign-in/sign-in.component';\nimport { ResetPasswordComponent } from './auth/sign-in/reset-password/reset-password.component';\nimport { ActivationComponent } from './auth/activation/activation.component';\nimport { DashboardComponent } from './panel/dashboard/dashboard.component';\nimport { ChangePasswordComponent } from './panel/change-password/change-password.component';\nimport { ChargeAccountComponent } from './panel/charge-account/charge-account.component';\nimport { BetHistoryComponent } from './panel/bet-history/bet-history.component';\nimport { SupportComponent } from './panel/support/support.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LandingComponent,\n    GameComponent,\n    RouletteComponent,\n    TimerComponent,\n    BetComponent,\n    LatestRollComponent,\n    BetControlComponent,\n    AuthComponent,\n    SignUpComponent,\n    SignInComponent,\n    ResetPasswordComponent,\n    ActivationComponent,\n    DashboardComponent,\n    ChangePasswordComponent,\n    ChargeAccountComponent,\n    BetHistoryComponent,\n    SupportComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ToastrModule.forRoot(),\n    ReactiveFormsModule,\n    HttpClientModule,\n    Ng9OdometerModule.forRoot(),\n    TableModule\n  ],\n  providers: [{ provide: Window, useValue: window }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { AuthService } from '../../auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.css']\n})\nexport class ResetPasswordComponent implements OnInit {\n  email = '';\n  loading = false;\n\n  constructor(private toastr: ToastrService,\n              private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.auth.loading$.subscribe((isLoading) => {\n      this.loading = isLoading;\n    })\n  }\n\n  onSubmit() {\n    this.auth.forget(this.email).subscribe(() => {\n      this.toastr.success('New password sent to your email !', 'New Password', {\n        positionClass: 'toast-bottom-right',\n      });\n      this.auth.loading$.next(false);\n    })\n  }\n\n}\n","<div class=\"reset-password\">\n    <h1>forget password</h1>\n    <div class=\"form-control\">\n        <label for=\"email\" class=\"form-control-title\">Email: </label>\n        <input [(ngModel)]=\"email\" #em=\"ngModel\" class=\"form-control-input\" name=\"email\" placeholder=\"Enter email\" type=\"text\" required email>\n    </div>\n    <span class=\"help-block\" *ngIf=\"em.invalid && em.touched && em.errors.required\">\n        email field is required ! \n    </span>\n    <span class=\"help-block\" *ngIf=\"em.invalid && em.touched && em.errors.email\">\n        wrong email format ! \n    </span>\n    <button type=\"button\" [disabled]=\"!em.valid || loading\" (click)=\"onSubmit()\">{{ loading ? 'Please wait ...' : 'send reset link!' }}</button>\n</div>","import { Component, HostListener, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../auth/models/auth';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit, OnDestroy {\n  restart$: Subscription;\n  loggedInUserData$: Subscription;\n  isUserLoggedIn = false;\n  userData: User;\n  userUpdateFund$: Subscription;\n  menuClass = '';\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit(): void {\n    this.auth.loggedInUserData$.subscribe((userData: User) => {\n      this.isUserLoggedIn = userData != null;\n      this.userData = userData != null ? {...userData} : null;\n    });\n  }\n\n  ngOnDestroy() {\n    this.loggedInUserData$.unsubscribe();\n    this.userUpdateFund$.unsubscribe();\n  }\n  \n  @HostListener('window:scroll', ['$event'])\n  onScroll($event) {\n    if (window.scrollY > 20) {\n      this.menuClass = 'menu-disapear';\n    } else {\n      this.menuClass = '';\n    }\n  }\n\n}\n","<header>\n    <nav class=\"nav-menu\" [ngClass]=\"menuClass\">\n        <div class=\"container\">\n            <ul class=\"menu\">\n                <li *ngIf=\"!isUserLoggedIn\" class=\"menu-item\"><a routerLink=\"/auth\" >Sign Up | Sign In</a></li>\n                <li *ngIf=\"userData\" class=\"menu-item\"><a routerLink=\"/panel\">{{ userData.username }} | Coin: <ng9-odometer [number]=\"userData.fund\"></ng9-odometer><img src=\"../../assets/coin.png\"  alt=\"\"></a></li>\n                <li class=\"menu-item\"><a routerLink=\"/game\" >Game</a></li>\n            </ul>\n        </div>\n    </nav>\n</header>","import { animate, trigger, style, transition, state, query, stagger } from '@angular/animations';\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SocketService } from 'src/app/socket.service';\nimport { BetService } from '../bet.service';\nimport { Bet } from '../models/bet';\n\n@Component({\n  selector: 'app-bet',\n  templateUrl: './bet.component.html',\n  styleUrls: ['./bet.component.css'],\n  animations: [\n    trigger('list', [\n      state('in', style({})),\n      transition('* => void', [\n        style({ height: '!', opacity: 1 }),\n        animate(200, style({ height: 0, opacity: 0 }))\n      ]),\n      transition('void => *', [\n        style({ height: 0, opacity: 0 }),\n        animate(400, style({ height: '*', opacity: 1 }))\n      ])\n    ]),\n    trigger('winnerState', [\n      state('winner', style({ color: 'green' })),\n      state('loser', style({ color: 'red' })),\n    ])\n  ]\n})\nexport class BetComponent implements OnInit, OnDestroy {\n  @Input() betColor;\n  @Input() betText: string;\n  buttonColor: string;\n  imageColor: string;\n  bets = [];\n  totalBetAmount = 0;\n  winnerStatus = 'normal';\n  retriveAllBets$: Subscription;\n  newBetAdded$: Subscription;\n  winner$: Subscription;\n  restart$: Subscription;\n\n\n  constructor(private socketService: SocketService,\n              private betService: BetService) { }\n  \n  ngOnInit(): void {\n    this.retriveAllBets$ = this\n      .betService\n      .retriveAllBets$\n      .pipe(map((bets: Bet[]) => {\n        const colorFiltered = bets.filter((bet: Bet) => bet.color == this.betColor);\n        return colorFiltered;\n      }))\n      .subscribe((bets: Bet[]) => {\n        this.bets = bets;\n        const totalBetAmount = bets.reduce((acc, cur) => acc + cur.amount ,0);\n        this.totalBetAmount = totalBetAmount;\n      });\n\n    this.newBetAdded$ = this.betService.newBetAdded$.subscribe((bet: Bet) => {\n      if (bet.color == this.betColor) {\n        this.bets.push(bet);\n        this.totalBetAmount += bet.amount\n      }\n      this.bets.sort((a: Bet, b: Bet) => {\n        return a.amount < b.amount ? 1 : a.amount > b.amount ? -1 : 0;\n      });\n    });\n\n    this.winner$ = this.socketService.fromEvent('winner').subscribe((winnerColor: string) => {\n      if (winnerColor == this.betColor) {\n        this.winnerStatus = 'winner';\n        this.bets.forEach((bet: Bet) => {\n          if (bet.color == winnerColor) {\n            if (winnerColor == 'red' || winnerColor == 'black') {\n              return bet.amount *= 2;\n            }\n            return bet.amount *= 14;\n          }\n        });\n        const totalBetAmount = this.bets.reduce((acc, cur) => acc + cur.amount ,0);\n        this.totalBetAmount = totalBetAmount;\n      } else {\n        this.winnerStatus = 'loser';\n      }\n    });\n\n    this.restart$ = this.socketService.fromEvent('restart').subscribe(() => {\n      this.bets = [];\n      this.winnerStatus = 'normal';\n      this.totalBetAmount = 0;\n    });\n\n    if (this.betColor == 'red') {\n      this.buttonColor = '-webkit-linear-gradient(rgb(124, 14, 14), rgb(80, 6, 6))';\n      this.imageColor = '';\n    } else if (this.betColor == 'green') {\n      this.buttonColor = '-webkit-linear-gradient(rgb(17, 124, 3), rgb(26, 102, 7))';\n      this.imageColor = 'hue-rotate(175deg)';\n    } else {\n      this.buttonColor = '-webkit-linear-gradient(rgb(57, 58, 57), rgb(29, 29, 29))';\n      this.imageColor = 'grayscale(100%)';\n    }\n  }\n\n  addNewBet() {\n    this.betService.newBet(this.betColor);\n  }\n\n  ngOnDestroy() {\n    this.retriveAllBets$.unsubscribe();\n    this.newBetAdded$.unsubscribe();\n    this.winner$.unsubscribe();\n    this.restart$.unsubscribe();\n  }\n\n}\n","<div class=\"bet\">\n    <div class=\"bet-header\">\n        <img class=\"bet-image\" [ngStyle]=\"{'filter': imageColor}\" src=\"../../../assets/red.png\" alt=\"\">\n        <button (click)=\"addNewBet()\" [ngStyle]=\"{'background': buttonColor}\">{{ betText }}</button>\n        <div class=\"users-bet\">\n            <div class=\"bets-count\"><ng9-odometer [number]=\"bets.length\"></ng9-odometer> Total bets</div>\n            <div class=\"bets-amount\" [ngStyle]=\"{'color': this.winnerStatus == 'winner' && this.bets.length ? 'green' : this.winnerStatus == 'loser' && this.bets.length  ? 'red' : ''}\">{{ this.winnerStatus == 'winner' && this.bets.length ? '+' : this.winnerStatus == 'loser' && this.bets.length  ? '-' : '' }} <ng9-odometer [number]=\"totalBetAmount\"></ng9-odometer> <img src=\"../../../assets/coin.png\" alt=\"\"></div>\n        </div>\n        <div class=\"user-bet\" @list *ngFor=\"let bet of bets\">\n            <div class=\"place-bet-holder\" [@winnerState]=\"winnerStatus\">\n                <div class=\"place-bet-name\">{{ bet.name }}</div>\n                <div class=\"place-bet-amount\">{{ this.winnerStatus == 'winner' ? '+' : this.winnerStatus == 'loser' ? '-' : '' }} <ng9-odometer [number]=\"bet.amount\"></ng9-odometer><img src=\"../../../assets/coin.png\" alt=\"\"></div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private auth: AuthService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  linkToChangePassword() {\n    this.router.navigate(['/panel/change-password']);\n  }\n\n  linkToChargeAccount() {\n    this.router.navigate(['panel/charge-account']);\n  }\n\n  linkToBetHistory() {\n    this.router.navigate(['panel/bet-history']);\n  }\n\n  linkToSupportTicket() {\n    this.router.navigate(['panel/support']);\n  }\n\n  logout() {\n    this.auth.logout();\n    this.router.navigate(['/game']);\n  }\n\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Dashboard</h1>\n    <h3>what do you want to do</h3>\n    <div class=\"dashboard-container\">\n        <button (click)=\"linkToChangePassword()\">Change Password</button>\n        <button (click)=\"linkToChargeAccount()\">Charge Account</button>\n        <button (click)=\"linkToSupportTicket()\">Support ticket</button>\n        <button (click)=\"linkToBetHistory()\">Bet's History</button>\n        <button (click)=\"logout()\">Logout</button>\n    </div>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\nimport { User } from '../auth/models/auth';\nimport { SocketService } from '../socket.service';\nimport { BetService } from './bet.service';\nimport { Bet } from './models/bet';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css'],\n})\nexport class GameComponent implements OnInit, OnDestroy {\n  winnerAudio: HTMLAudioElement;\n  allBets$: Subscription;\n  newBetAddedToAllUser$: Subscription;\n  betSuccess$: Subscription;\n  betFailed$: Subscription;\n  winner$: Subscription;\n  userNotFound$: Subscription;\n  insufficientFund$: Subscription;\n  updateFund$: Subscription;\n\n  constructor(private socketService: SocketService,\n              private betService: BetService,\n              private toastr: ToastrService,\n              private auth: AuthService) {}\n\n  ngOnInit(): void {\n    this.winnerAudio = new Audio();\n\n    this.socketService.emit('enteredGame');\n\n    this.allBets$ = this.socketService.fromEvent('allBets').subscribe((bets: Bet[]) => {\n      this.betService.retriveAllBets$.next(bets);\n    });\n    \n    this.newBetAddedToAllUser$ = this.socketService.fromEvent('newBetAddedToAllUser').subscribe((bet: Bet) => {\n      this.betService.newBetAdded$.next(bet);\n    })\n\n    this.betSuccess$ = this.socketService.fromEvent('betSuccess').subscribe(() => {\n      this.toastr.success('Your Bet successfully Submitted !', 'Bet Submitted !' , {\n        positionClass: 'toast-bottom-right',\n        easeTime: 1000\n      });\n    });\n\n    this.betFailed$ = this.socketService.fromEvent('betFailed').subscribe(() => {\n      this.toastr.error('Wait For Next Round !', 'Rolling Time !' , {\n        positionClass: 'toast-bottom-right',\n        easeTime: 1000\n      });\n    });\n\n    this.userNotFound$ = this.socketService.fromEvent('userNotFound').subscribe(() => {\n      this.toastr.error('Failed to placing bet, plaese sign in again !', 'Failed' , {\n        positionClass: 'toast-bottom-right',\n        easeTime: 1000\n      });\n      this.auth.loggedInUserData$.next(null);\n    });\n\n    this.insufficientFund$ = this.socketService.fromEvent('insufficientFund').subscribe(() => {\n      this.toastr.error('Charge your account !', 'Insufficient Fund' , {\n        positionClass: 'toast-bottom-right',\n        easeTime: 1000\n      });\n    });\n\n    this.updateFund$ = this.socketService.fromEvent('updateFund').subscribe((fund: number) => {\n      this.auth.loggedInUserData$.pipe(take(1)).subscribe((userData: User) => {\n        const newUserData = {\n          id: userData.id,\n          email: userData.email,\n          username: userData.username,\n          token: userData.token,\n          fund: fund,\n          updatedAt: userData.updatedAt,\n          createdAt: userData.createdAt\n        };\n        this.auth.loggedInUserData$.next(newUserData);\n      });\n    });\n\n    this.winner$ = this.socketService.fromEvent('winner').subscribe((winnerColor: string) => {\n      if (winnerColor == 'red') {\n        this.winnerAudio.src = '../../../../assets/red.ogg';\n        this.winnerAudio.load();\n        this.winnerAudio.play()\n      } else if (winnerColor == 'green') {\n        this.winnerAudio.src = '../../../../assets/green.ogg';\n        this.winnerAudio.load();\n        this.winnerAudio.play()\n      } else {\n        this.winnerAudio.src = '../../../../assets/black.ogg';\n        this.winnerAudio.load();\n        this.winnerAudio.play()\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.allBets$.unsubscribe();\n    this.newBetAddedToAllUser$.unsubscribe();\n    this.betSuccess$.unsubscribe();\n    this.betFailed$.unsubscribe();\n    this.winner$.unsubscribe();\n    this.userNotFound$.unsubscribe();\n    this.insufficientFund$.unsubscribe();\n    this.updateFund$.unsubscribe();\n  }\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <app-timer></app-timer>\n    <app-roulette></app-roulette>\n    <app-latest-roll></app-latest-roll>\n    <app-bet-control></app-bet-control>\n    <div class=\"bets-container\">\n        <app-bet \n        betColor=\"red\"\n        betText=\"PLACE BET ( WIN X2 )\"\n        ></app-bet>\n        <app-bet \n        betColor=\"green\"\n        betText=\"PLACE BET ( WIN X14 )\"\n        ></app-bet>\n        <app-bet \n        betColor=\"black\"\n        betText=\"PLACE BET ( WIN X2 )\"\n        ></app-bet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-charge-account',\n  templateUrl: './charge-account.component.html',\n  styleUrls: ['./charge-account.component.css']\n})\nexport class ChargeAccountComponent implements OnInit {\n  amount = null\n  chargeAccountForm: FormGroup;\n  isLoading$: Subscription;\n  chargeAccount$: Subscription;\n  loading = false;\n\n  constructor(private auth: AuthService,\n              private toastr: ToastrService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.isLoading$ = this.auth.loading$.subscribe((isLoading) => {\n      this.loading = isLoading;\n    });\n    this.chargeAccountForm = new FormGroup({\n      'amount' : new FormControl(null, [Validators.required, Validators.min(5)])\n    });\n  }\n\n  onSubmit() {\n    const { amount } = this.chargeAccountForm.value;\n    this.chargeAccount$ = this.auth.chargeAccount(amount).subscribe(() => {\n      this.toastr.success('your account charged Successfully !', 'Account charge', {\n        positionClass: 'toast-bottom-right',\n      });\n      this.router.navigate(['/panel']);\n    });\n  }\n\n}\n","<div class=\"bg-image\"></div>\n<div class=\"container\">\n    <h1>Charge Account</h1>\n    <h3>How much you want to charge account</h3>\n    <div class=\"charge-container\">\n        <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"chargeAccountForm\">\n            <div class=\"form-control\">\n                <label class=\"form-control-title\" for=\"amount\">Amount</label>\n                <input class=\"form-control-input\" formControlName=\"amount\" placeholder=\"enter amount\" type=\"number\" name=\"amount\" min=\"6\" required>\n            </div>\n            <span class=\"help-block\" *ngIf=\"chargeAccountForm.get('amount').invalid && chargeAccountForm.get('amount').touched && chargeAccountForm.get('amount').errors.required\">\n                amount is required ! \n            </span>\n            <span class=\"help-block\" *ngIf=\"chargeAccountForm.get('amount').invalid && chargeAccountForm.get('amount').touched && chargeAccountForm.get('amount').errors.min\">\n                minimum charge amount is 5 ! \n            </span>\n            <button [disabled]=\"!chargeAccountForm.valid\">Charge Account</button>\n        </form>\n    </div>\n</div>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { catchError, take, tap } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { SocketService } from '../socket.service';\nimport { RegisterResponse, User } from './models/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  loggedInUserData$ = new BehaviorSubject<User>(null);\n  loading$ = new BehaviorSubject<boolean>(false);\n  isLoggedIn = false;\n  token : string;\n\n  constructor(private http: HttpClient,\n              private toastr: ToastrService,\n              private socket: SocketService) { }\n\n  register(username: string, email: string, password: string, cPassword: string) {\n    this.loading$.next(true);\n    return this.http.post<{ msg: string }>(environment.apiUrl + 'public/register', {\n      username,\n      email,\n      password,\n      cpassword: cPassword\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 && error.error.code === 1) {\n        this.toastr.error('Email already taken !', 'Email', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 400 && error.error.code === 2) {\n        this.toastr.error('Username already taken !', 'Username', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 400 && error.error.code === 3) {\n        this.toastr.error('Validation Fail !', 'Validation', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }),\n    tap(() => {\n      this.loading$.next(false);\n    }));\n  }\n\n  login(username: string, password: string) {\n    this.loading$.next(true);\n    return this.http.post<RegisterResponse>(environment.apiUrl + 'public/login', {\n      username,\n      password\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 && error.error.code === 1) {\n        this.toastr.error('User not found !', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 400 && error.error.code === 2) {\n        this.toastr.error('Please activate your account !', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 401) {\n        this.toastr.error('Wrong email or password', 'Try again', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }), tap((userData: RegisterResponse) => {\n      this.loading$.next(false);\n      const loggedInUser = {\n        id: userData.user.id,\n        email: userData.user.email,\n        token: userData.token,\n        username: userData.user.username,\n        updatedAt: userData.user.updatedAt,\n        fund: userData.user.fund,\n        createdAt: userData.user.createdAt\n      };\n      this.loggedInUserData$.next(loggedInUser);\n      this.isLoggedIn = true;\n      this.token = userData.token;\n      this.socket.emit('userLoggedIn', userData.user.token);\n    }));\n  }\n\n  activation(token: string) {\n    this.loading$.next(true);\n    return this.http.post<RegisterResponse>(environment.apiUrl + 'public/activation', {\n      token\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 ) {\n        this.toastr.error('User not found !', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 401) {\n        this.toastr.error('Wrong email or password', 'Try again', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }), tap(() => {\n      this.loading$.next(false);\n    }));\n  }\n\n  forget(email: string) {\n    this.loading$.next(true);\n    return this.http.post<{ msg: string }>(environment.apiUrl + 'public/forget', {\n      email\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 ) {\n        this.toastr.error('User not found !', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server error, try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }));\n  }\n\n  changePassword(password: string, cpassword: string) {\n    this.loading$.next(true);\n    return this.http.post<{ msg: string }>(environment.apiUrl + 'private/reset-password', {\n      token: this.token, \n      password,\n      cpassword\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 ) {\n        this.toastr.error('field required', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }), tap(() => {\n      this.loading$.next(false);\n    }));\n  }\n\n  chargeAccount(amount: number) {\n    this.loading$.next(true);\n    return this.http.post<{ msg: string, amount: number }>(environment.apiUrl + 'private/charge-account', {\n      token: this.token, \n      amount\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 ) {\n        this.toastr.error('field required', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }), tap((response: { msg: string, amount: number }) => {\n      this.loading$.next(false);\n      this.loggedInUserData$.pipe(take(1)).subscribe((userData: User) => {\n        const newUserData = {\n          id: userData.id,\n          email: userData.email,\n          token: userData.token,\n          username: userData.username,\n          updatedAt: userData.updatedAt,\n          fund: response.amount,\n          createdAt: userData.createdAt\n        };\n        this.loggedInUserData$.next(newUserData);\n      });\n    }));\n  }\n\n  support(title: string, description: string) {\n    this.loading$.next(true);\n    return this.http.post<{ msg: string }>(environment.apiUrl + 'private/support', {\n      token: this.token, \n      title,\n      description\n    }).pipe(catchError(error => {\n      this.loading$.next(false);\n      if (error.status === 400 ) {\n        this.toastr.error('field required', 'User', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      if (error.status === 500) {\n        this.toastr.error('Server Error, Try Again !', 'Server Error', {\n          positionClass: 'toast-bottom-right',\n        });\n      }\n      return of();\n    }), tap((response: { msg: string, amount: number }) => {\n      this.loading$.next(false);\n    }));\n  }\n\n  logout() {\n    this.loggedInUserData$.next(null);\n    this.isLoggedIn = false;\n    this.toastr.success('logged out successfully !', 'Logout', {\n      positionClass: 'toast-bottom-right',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { AuthService } from './auth/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivateChild {\n\n  constructor(private auth: AuthService,\n              private router: Router) {}\n  canActivateChild(\n    childRoute: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return this.auth.isLoggedIn === false ? this.router.navigate(['/']) : true;\n  }\n  \n}\n","import { trigger, transition, style, animate } from '@angular/animations';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SocketService } from 'src/app/socket.service';\n\ninterface LatestRolls {\n  rolledNumber: number;\n  colorStyle: string;\n}\n\n@Component({\n  selector: 'app-latest-roll',\n  templateUrl: './latest-roll.component.html',\n  styleUrls: ['./latest-roll.component.css'],\n  animations: [\n    trigger('list', [\n      transition(':enter', [\n        style({ transform: 'translateX(50px)' }), animate('300ms', style({  transform: 'translateX(0)' }))]\n      ),\n    ])\n  ]\n})\nexport class LatestRollComponent implements OnInit, OnDestroy {\n  rolls: LatestRolls[];\n  latestRolls$: Subscription;\n\n\n  constructor(private socketService: SocketService) { }\n\n  ngOnInit(): void {\n    this.latestRolls$ = this.socketService.fromEvent('latestRolls')\n    .pipe(\n      map((rolls: number[]) => {\n        const updatedRolls = [];\n        rolls.forEach((roll: number) => {\n          let colorStyle = '';\n          if (roll === 0) {\n            colorStyle = 'hue-rotate(175deg)';\n          } else if (roll > 7) {\n            colorStyle = 'grayscale(100%)';\n          }\n          updatedRolls.push({ rolledNumber: roll, colorStyle });\n        });\n        return updatedRolls;\n      })\n    )\n    .subscribe((rolls: LatestRolls[]) => {\n      this.rolls = rolls;\n    });\n  }\n\n  ngOnDestroy() {\n    this.latestRolls$.unsubscribe();\n  }\n\n}\n","<div class=\"latest-rolls\">\n    <p>Latest Rolls: </p>\n    <img src=\"../../../assets/red.png\" alt=\"\" @list *ngFor=\"let roll of rolls\" [ngStyle]=\"{'filter': roll.colorStyle}\">\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthComponent } from './auth/auth.component';\nimport { ActivationComponent } from './auth/activation/activation.component';\nimport { GameComponent } from './game/game.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { DashboardComponent } from './panel/dashboard/dashboard.component';\nimport { AuthGuard } from './auth.guard';\nimport { ChangePasswordComponent } from './panel/change-password/change-password.component';\nimport { ChargeAccountComponent } from './panel/charge-account/charge-account.component';\nimport { BetHistoryComponent } from './panel/bet-history/bet-history.component';\nimport { SupportComponent } from './panel/support/support.component';\n\nconst routes: Routes = [\n  { path: '', component: LandingComponent },\n  { path: 'game' , component: GameComponent },\n  { path: 'auth', component: AuthComponent },\n  { path: 'activation/:token', component: ActivationComponent },\n  { path: 'panel', canActivateChild: [AuthGuard], children: [\n    { path: '', component: DashboardComponent },\n    { path: 'change-password', component: ChangePasswordComponent },\n    { path: 'charge-account', component: ChargeAccountComponent },\n    { path: 'bet-history', component: BetHistoryComponent },\n    { path: 'support', component: SupportComponent }\n  ]},\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}